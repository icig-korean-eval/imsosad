{"ast":null,"code":"/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\n\n/**\r\n * @fileoverview The validateSampleRate function.\r\n * @see https://github.com/rochars/wavefile\r\n */\n\n/**\r\n * Validate the sample rate value of a wav file according to the number of\r\n * channels and the bit depth of the audio.\r\n * @param {number} channels The number of channels in the file.\r\n * @param {number} bits The number of bits per sample.\r\n * @param {number} sampleRate The sample rate to be validated.\r\n * @return {boolean} True is the sample rate is valid, false otherwise.\r\n */\nexport function validateSampleRate(channels, bits, sampleRate) {\n  /** @type {number} */\n  let byteRate = channels * (bits / 8) * sampleRate;\n  if (sampleRate < 1 || byteRate > 4294967295) {\n    return false;\n  }\n  return true;\n}","map":{"version":3,"names":["validateSampleRate","channels","bits","sampleRate","byteRate"],"sources":["C:/Users/kimmi/Desktop/learning-interface/learning-interface/node_modules/wavefile/lib/validators/validate-sample-rate.js"],"sourcesContent":["/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The validateSampleRate function.\r\n * @see https://github.com/rochars/wavefile\r\n */\r\n\r\n/**\r\n * Validate the sample rate value of a wav file according to the number of\r\n * channels and the bit depth of the audio.\r\n * @param {number} channels The number of channels in the file.\r\n * @param {number} bits The number of bits per sample.\r\n * @param {number} sampleRate The sample rate to be validated.\r\n * @return {boolean} True is the sample rate is valid, false otherwise.\r\n */\r\nexport function validateSampleRate(channels, bits, sampleRate) {\r\n  /** @type {number} */\r\n  let byteRate = channels * (bits / 8) * sampleRate;\r\n  if (sampleRate < 1 || byteRate > 4294967295) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAkBA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAE;EAC7D;EACA,IAAIC,QAAQ,GAAGH,QAAQ,IAAIC,IAAI,GAAG,CAAC,CAAC,GAAGC,UAAU;EACjD,IAAIA,UAAU,GAAG,CAAC,IAAIC,QAAQ,GAAG,UAAU,EAAE;IAC3C,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}