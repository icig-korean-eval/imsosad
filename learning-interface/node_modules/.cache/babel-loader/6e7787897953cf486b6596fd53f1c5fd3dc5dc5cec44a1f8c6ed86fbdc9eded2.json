{"ast":null,"code":"/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\n\n/**\r\n * @fileoverview FIR LPF. Based on the FIR LPF from Fili by Florian Markert.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\n\n/**\r\n * A FIR low pass filter.\r\n */\nexport class FIRLPF {\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\n  constructor(order, sampleRate, cutOff) {\n    /** @type {number} */\n    let omega = 2 * Math.PI * cutOff / sampleRate;\n    /** @type {number} */\n    let dc = 0;\n    this.filters = [];\n    for (let i = 0; i <= order; i++) {\n      if (i - order / 2 === 0) {\n        this.filters[i] = omega;\n      } else {\n        this.filters[i] = Math.sin(omega * (i - order / 2)) / (i - order / 2);\n        // Hamming window\n        this.filters[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / order);\n      }\n      dc = dc + this.filters[i];\n    }\n    // normalize\n    for (let i = 0; i <= order; i++) {\n      this.filters[i] /= dc;\n    }\n    this.z = this.initZ_();\n  }\n\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\n  filter(sample) {\n    this.z.buf[this.z.pointer] = sample;\n    /** @type {number} */\n    let out = 0;\n    for (let i = 0, len = this.z.buf.length; i < len; i++) {\n      out += this.filters[i] * this.z.buf[(this.z.pointer + i) % this.z.buf.length];\n    }\n    this.z.pointer = (this.z.pointer + 1) % this.z.buf.length;\n    return out;\n  }\n\n  /**\r\n   * Reset the filter.\r\n   */\n  reset() {\n    this.z = this.initZ_();\n  }\n\n  /**\r\n   * Return the default value for z.\r\n   * @private\r\n   */\n  initZ_() {\n    /** @type {!Array} */\n    let r = [];\n    for (let i = 0; i < this.filters.length - 1; i++) {\n      r.push(0);\n    }\n    return {\n      buf: r,\n      pointer: 0\n    };\n  }\n}","map":{"version":3,"names":["FIRLPF","constructor","order","sampleRate","cutOff","omega","Math","PI","dc","filters","i","sin","cos","z","initZ_","filter","sample","buf","pointer","out","len","length","reset","r","push"],"sources":["C:/Users/kimmi/Desktop/learning-interface/learning-interface/node_modules/wavefile/lib/resampler/fir-lpf.js"],"sourcesContent":["/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview FIR LPF. Based on the FIR LPF from Fili by Florian Markert.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * A FIR low pass filter.\r\n */\r\nexport class FIRLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    /** @type {number} */\r\n    let omega = 2 * Math.PI * cutOff / sampleRate;\r\n    /** @type {number} */\r\n    let dc = 0;\r\n    this.filters = [];\r\n    for (let i = 0; i <= order; i++) {\r\n      if (i - order / 2 === 0) {\r\n        this.filters[i] = omega;\r\n      } else {\r\n        this.filters[i] = Math.sin(omega * (i - order / 2)) / (i - order / 2);\r\n        // Hamming window\r\n        this.filters[i] *= (0.54 - 0.46 * Math.cos(2 * Math.PI * i / order));\r\n      }\r\n      dc = dc + this.filters[i];\r\n    }\r\n    // normalize\r\n    for (let i = 0; i <= order; i++) {\r\n      this.filters[i] /= dc;\r\n    }\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    this.z.buf[this.z.pointer] = sample;\r\n    /** @type {number} */\r\n    let out = 0;\r\n    for (let i = 0, len = this.z.buf.length; i < len; i++) {\r\n      out += (\r\n        this.filters[i] * this.z.buf[(this.z.pointer + i) % this.z.buf.length]);\r\n    }\r\n    this.z.pointer = (this.z.pointer + 1) % (this.z.buf.length);\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * Return the default value for z.\r\n   * @private\r\n   */\r\n  initZ_() {\r\n    /** @type {!Array} */\r\n    let r = [];\r\n    for (let i = 0; i < this.filters.length - 1; i++) {\r\n      r.push(0);\r\n    }\r\n    return {\r\n      buf: r,\r\n      pointer: 0\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}