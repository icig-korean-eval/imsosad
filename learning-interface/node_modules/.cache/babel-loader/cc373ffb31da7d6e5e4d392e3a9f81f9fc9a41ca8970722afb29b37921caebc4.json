{"ast":null,"code":"var _jsxFileName = \"/Users/bagjun-won/test-3d/learning-interface/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { AudioRecorder } from './utils/audioUtils';\nimport './styles/globals.css';\nimport './styles/learningInterface.css';\n\n// 이미지 임포트\nimport aiChatIcon from './images/alstj1.png';\nimport userChatIcon from './images/Vector.png';\nimport microphoneIcon from './images/mdi-light_microphone.svg';\nimport feedbackBubbleIcon from './images/clarity_talk-bubbles-outline-badged.png';\nimport logoIcon from './images/clarity_talk-bubbles-outline-badged.svg';\nimport arrowIcon from './images/clarity_arrow-line.svg';\n\n// Define message type to ensure proper type checking\n\n// 학습 상태를 추적하기 위한 타입\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [currentStage, setCurrentStage] = useState('initial');\n  const [messages, setMessages] = useState([{\n    type: 'ai',\n    text: 'Hello, ICIG! Tell me the situation you want to learn. For example, ordering at a café!',\n    id: 'initial-message'\n  }]);\n  const [feedback, setFeedback] = useState('');\n  const [showFeedbackContent, setShowFeedbackContent] = useState(false);\n  const [aiHasResponded, setAiHasResponded] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(null); // 현재 재생중인 오디오 ID\n\n  // AudioRecorder 인스턴스 저장\n  const recorderRef = useRef(null);\n\n  // 컴포넌트 마운트 시 AudioRecorder 초기화\n  useEffect(() => {\n    recorderRef.current = new AudioRecorder();\n    return () => {\n      // 컴포넌트 언마운트 시 오디오 URL 정리\n      if (audioURL) {\n        AudioRecorder.revokeAudioURL(audioURL);\n      }\n    };\n  }, [audioURL]);\n\n  // 현재 재생 중인 utterance 참조\n  const utteranceRef = useRef(null);\n\n  // 텍스트를 음성으로 변환\n  const handlePlayAudio = (text, id) => {\n    if ('speechSynthesis' in window) {\n      // 현재 클릭한 것과 동일한 버튼이 재생 중이면 (중지 버튼 클릭 시)\n      if (isPlaying === id) {\n        window.speechSynthesis.cancel(); // 현재 재생 중인 오디오 중지\n        setIsPlaying(null); // 재생 상태 초기화\n        return; // 함수 종료\n      }\n\n      // 다른 버튼이 재생 중이면 해당 오디오 중지\n      if (isPlaying) {\n        window.speechSynthesis.cancel();\n      }\n\n      // 새 utterance 생성\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = text.match(/[ㄱ-ㅣ|가-힣]/) ? 'ko-KR' : 'en-US';\n\n      // 참조 저장\n      utteranceRef.current = utterance;\n\n      // 재생 상태 업데이트\n      setIsPlaying(id);\n\n      // 재생 완료 이벤트 처리\n      utterance.onend = () => {\n        setIsPlaying(null);\n        utteranceRef.current = null;\n      };\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.log('Text-to-speech not supported in this browser');\n    }\n  };\n\n  // 고유 ID 생성 함수\n  const generateId = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n\n  // 녹음 시작/중지 함수\n  const toggleRecording = async () => {\n    if (isRecording) {\n      try {\n        // 녹음 중지\n        setIsRecording(false);\n        if (recorderRef.current) {\n          const audioBlob = await recorderRef.current.stopRecording();\n          const url = AudioRecorder.createAudioURL(audioBlob);\n          setAudioURL(url);\n\n          // 여기서는 사용자가 실제로 말한 텍스트를 얻기 위해 음성-텍스트 API를 호출할 것입니다.\n          // 예제 목적으로 사용자 입력 시뮬레이션\n          simulateUserInput();\n        }\n      } catch (error) {\n        console.error('녹음 중지 오류:', error);\n        setIsRecording(false);\n      }\n    } else {\n      try {\n        // 녹음 시작\n        if (recorderRef.current) {\n          await recorderRef.current.startRecording();\n          setIsRecording(true);\n        }\n      } catch (error) {\n        console.error('녹음 시작 오류:', error);\n      }\n    }\n  };\n\n  // 사용자 입력 시뮬레이션\n  const simulateUserInput = () => {\n    // 사용자가 말한 예시 텍스트 (실제로는 음성-텍스트 API에서 얻어옴)\n    let userInput = '';\n\n    // 현재 상태에 따라 사용자 입력 시뮬레이션\n    if (messages.length === 1) {\n      // 첫 번째 사용자 응답\n      userInput = \"I want to practice talking with someone I'm meeting for the first time.\";\n    } else {\n      // 두 번째 사용자 응답\n      userInput = \"나는 저녁을 먹었어.\";\n    }\n\n    // 메시지 목록에 사용자 입력 추가 (id 추가)\n    const userMessageId = generateId();\n    const updatedMessages = [...messages, {\n      type: 'user',\n      text: userInput,\n      id: userMessageId\n    }];\n    setMessages(updatedMessages);\n    setCurrentStage('userInput');\n\n    // AI 응답 시뮬레이션 (짧은 지연 후)\n    setTimeout(() => {\n      simulateAIResponse(updatedMessages, userInput);\n    }, 1000);\n  };\n\n  // AI 응답 시뮬레이션\n  const simulateAIResponse = (currentMessages, userInput) => {\n    let aiResponse = '';\n    let newFeedback = null;\n    if (userInput.includes('first time')) {\n      // 첫 번째 사용자 입력 후 AI 응답\n      aiResponse = '좋아! 그럼 나부터 가볍게 인사해볼게! 안녕~ 나는 ooo야. 만나서 반가워 :) 이제 너 차례야!';\n      // 첫 번째 응답에도 피드백 제공\n      newFeedback = `Good job! You expressed your learning goal clearly.\n\n\"I want to practice talking with someone I'm meeting for the first time.\"\n\nNow, when you meet someone for the first time in Korean, you usually say:\n\n👉 안녕하세요! 처음 뵙겠습니다. (Hello! Nice to meet you.)\n👉 저는 [이름]입니다. (I am [name].)\n\n📝 Try introducing yourself using these phrases!`;\n      setCurrentStage('feedback');\n      setAiHasResponded(true);\n    } else if (userInput.includes('저녁')) {\n      // 두 번째 사용자 입력 후 AI 응답\n      aiResponse = '좋아! 그럼 나부터 가볍게 인사해볼게! 안녕~ 나는 ooo야. 만나서 반가워 :) 이제 너 차례야!';\n\n      // 두 번째 사용자 입력 후 피드백 제공\n      newFeedback = `That's a good sentence! \"나는 저녁을 먹었어\" means \n\"I had dinner.\"\n  You used it well to talk about what you did.\nBut right now, we're introducing ourselves.\n  When you introduce yourself, it's more natural to say your name!\n\n👉 Here's how you can answer:\n안녕! 나는 ICIG야. (Hi! I'm ICIG.)\n만나서 반가워! 나는 켄이야. (Nice to meet you! I'm Ken.)\n\n📝 Want to try again?\nTry saying your name using \"나는 ○○야.\"`;\n      setCurrentStage('feedback');\n    }\n\n    // 메시지 목록에 AI 응답 추가 (id 추가)\n    const aiMessageId = generateId();\n    setMessages([...currentMessages, {\n      type: 'ai',\n      text: aiResponse,\n      id: aiMessageId\n    }]);\n\n    // 피드백 설정\n    if (newFeedback) {\n      setFeedback(newFeedback);\n      setShowFeedbackContent(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"v1_248\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrowIcon,\n        alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n        style: {\n          transform: 'scaleX(-1)'\n        },\n        width: \"25\",\n        height: \"25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoIcon,\n        alt: \"\\uB85C\\uACE0\",\n        width: \"50\",\n        height: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Context-aware learning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.type === 'ai' ? 'ai-message-bubble' : 'user-message-bubble',\n        children: [message.type === 'ai' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: aiChatIcon,\n              alt: \"AI \\uD29C\\uD130\",\n              width: \"65\",\n              height: \"65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `play-button ${isPlaying === message.id ? 'playing' : ''}`,\n            onClick: () => handlePlayAudio(message.text, message.id),\n            children: isPlaying === message.id ? '⏸' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), message.type === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userChatIcon,\n            alt: \"\\uC0AC\\uC6A9\\uC790\",\n            width: \"40\",\n            height: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mic-button ${isRecording ? 'recording' : ''}`,\n      onClick: toggleRecording,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: microphoneIcon,\n          alt: \"\\uB9C8\\uC774\\uD06C\",\n          width: \"30\",\n          height: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-title\",\n        children: \"\\uD83D\\uDCE2 Automated feedback system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-background-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: feedbackBubbleIcon,\n          alt: \"\\uD53C\\uB4DC\\uBC31 \\uC544\\uC774\\uCF58\",\n          width: \"200\",\n          height: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), showFeedbackContent && feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-content\",\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `play-button ${isPlaying === 'feedback' ? 'playing' : ''}`,\n          style: {\n            position: 'absolute',\n            bottom: '20px',\n            /* 피드백 내용 맨 끝 자연스럽게 배치 */\n            right: '20px'\n          },\n          onClick: () => handlePlayAudio(feedback, 'feedback'),\n          children: isPlaying === 'feedback' ? '⏸' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HbvJr6oXYNLbMlNe1pm7nPMsNNI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","AudioRecorder","aiChatIcon","userChatIcon","microphoneIcon","feedbackBubbleIcon","logoIcon","arrowIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isRecording","setIsRecording","currentStage","setCurrentStage","messages","setMessages","type","text","id","feedback","setFeedback","showFeedbackContent","setShowFeedbackContent","aiHasResponded","setAiHasResponded","audioURL","setAudioURL","isPlaying","setIsPlaying","recorderRef","current","revokeAudioURL","utteranceRef","handlePlayAudio","window","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","lang","match","onend","speak","console","log","generateId","Math","random","toString","substring","toggleRecording","audioBlob","stopRecording","url","createAudioURL","simulateUserInput","error","startRecording","userInput","length","userMessageId","updatedMessages","setTimeout","simulateAIResponse","currentMessages","aiResponse","newFeedback","includes","aiMessageId","className","children","src","alt","style","transform","width","height","fileName","_jsxFileName","lineNumber","columnNumber","map","message","onClick","display","justifyContent","alignItems","position","bottom","right","_c","$RefreshReg$"],"sources":["/Users/bagjun-won/test-3d/learning-interface/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { AudioRecorder } from './utils/audioUtils';\nimport './styles/globals.css';\nimport './styles/learningInterface.css';\n\n// 이미지 임포트\nimport aiChatIcon from './images/alstj1.png';\nimport userChatIcon from './images/Vector.png';\nimport microphoneIcon from './images/mdi-light_microphone.svg';\nimport feedbackBubbleIcon from './images/clarity_talk-bubbles-outline-badged.png';\nimport logoIcon from './images/clarity_talk-bubbles-outline-badged.svg';\nimport arrowIcon from './images/clarity_arrow-line.svg';\n\n// Define message type to ensure proper type checking\ntype MessageType = 'ai' | 'user';\n\ninterface Message {\n  type: MessageType;\n  text: string;\n  id: string;\n}\n\n// 학습 상태를 추적하기 위한 타입\ntype LearningStage = 'initial' | 'userInput' | 'aiResponse' | 'feedback';\n\nconst App: React.FC = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [currentStage, setCurrentStage] = useState<LearningStage>('initial');\n  const [messages, setMessages] = useState<Message[]>([\n    { \n      type: 'ai', \n      text: 'Hello, ICIG! Tell me the situation you want to learn. For example, ordering at a café!',\n      id: 'initial-message'\n    }\n  ]);\n  const [feedback, setFeedback] = useState<string>('');\n  const [showFeedbackContent, setShowFeedbackContent] = useState(false);\n  const [aiHasResponded, setAiHasResponded] = useState(false);\n  const [audioURL, setAudioURL] = useState<string | null>(null);\n  const [isPlaying, setIsPlaying] = useState<string | null>(null); // 현재 재생중인 오디오 ID\n  \n  // AudioRecorder 인스턴스 저장\n  const recorderRef = useRef<AudioRecorder | null>(null);\n  \n  // 컴포넌트 마운트 시 AudioRecorder 초기화\n  useEffect(() => {\n    recorderRef.current = new AudioRecorder();\n    \n    return () => {\n      // 컴포넌트 언마운트 시 오디오 URL 정리\n      if (audioURL) {\n        AudioRecorder.revokeAudioURL(audioURL);\n      }\n    };\n  }, [audioURL]);\n  \n  // 현재 재생 중인 utterance 참조\n  const utteranceRef = useRef<SpeechSynthesisUtterance | null>(null);\n  \n  // 텍스트를 음성으로 변환\n  const handlePlayAudio = (text: string, id: string) => {\n    if ('speechSynthesis' in window) {\n      // 현재 클릭한 것과 동일한 버튼이 재생 중이면 (중지 버튼 클릭 시)\n      if (isPlaying === id) {\n        window.speechSynthesis.cancel(); // 현재 재생 중인 오디오 중지\n        setIsPlaying(null); // 재생 상태 초기화\n        return; // 함수 종료\n      }\n      \n      // 다른 버튼이 재생 중이면 해당 오디오 중지\n      if (isPlaying) {\n        window.speechSynthesis.cancel();\n      }\n      \n      // 새 utterance 생성\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = text.match(/[ㄱ-ㅣ|가-힣]/) ? 'ko-KR' : 'en-US';\n      \n      // 참조 저장\n      utteranceRef.current = utterance;\n      \n      // 재생 상태 업데이트\n      setIsPlaying(id);\n      \n      // 재생 완료 이벤트 처리\n      utterance.onend = () => {\n        setIsPlaying(null);\n        utteranceRef.current = null;\n      };\n      \n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.log('Text-to-speech not supported in this browser');\n    }\n  };\n  \n  // 고유 ID 생성 함수\n  const generateId = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  \n  // 녹음 시작/중지 함수\n  const toggleRecording = async () => {\n    if (isRecording) {\n      try {\n        // 녹음 중지\n        setIsRecording(false);\n        \n        if (recorderRef.current) {\n          const audioBlob = await recorderRef.current.stopRecording();\n          const url = AudioRecorder.createAudioURL(audioBlob);\n          setAudioURL(url);\n          \n          // 여기서는 사용자가 실제로 말한 텍스트를 얻기 위해 음성-텍스트 API를 호출할 것입니다.\n          // 예제 목적으로 사용자 입력 시뮬레이션\n          simulateUserInput();\n        }\n      } catch (error) {\n        console.error('녹음 중지 오류:', error);\n        setIsRecording(false);\n      }\n    } else {\n      try {\n        // 녹음 시작\n        if (recorderRef.current) {\n          await recorderRef.current.startRecording();\n          setIsRecording(true);\n        }\n      } catch (error) {\n        console.error('녹음 시작 오류:', error);\n      }\n    }\n  };\n  \n  // 사용자 입력 시뮬레이션\n  const simulateUserInput = () => {\n    // 사용자가 말한 예시 텍스트 (실제로는 음성-텍스트 API에서 얻어옴)\n    let userInput = '';\n    \n    // 현재 상태에 따라 사용자 입력 시뮬레이션\n    if (messages.length === 1) {\n      // 첫 번째 사용자 응답\n      userInput = \"I want to practice talking with someone I'm meeting for the first time.\";\n    } else {\n      // 두 번째 사용자 응답\n      userInput = \"나는 저녁을 먹었어.\";\n    }\n    \n    // 메시지 목록에 사용자 입력 추가 (id 추가)\n    const userMessageId = generateId();\n    const updatedMessages = [...messages, { \n      type: 'user' as const, \n      text: userInput,\n      id: userMessageId\n    }];\n    \n    setMessages(updatedMessages);\n    setCurrentStage('userInput');\n    \n    // AI 응답 시뮬레이션 (짧은 지연 후)\n    setTimeout(() => {\n      simulateAIResponse(updatedMessages, userInput);\n    }, 1000);\n  };\n  \n  // AI 응답 시뮬레이션\n  const simulateAIResponse = (currentMessages: Message[], userInput: string) => {\n    let aiResponse = '';\n    let newFeedback = null;\n    \n    if (userInput.includes('first time')) {\n      // 첫 번째 사용자 입력 후 AI 응답\n      aiResponse = '좋아! 그럼 나부터 가볍게 인사해볼게! 안녕~ 나는 ooo야. 만나서 반가워 :) 이제 너 차례야!';\n      // 첫 번째 응답에도 피드백 제공\n      newFeedback = `Good job! You expressed your learning goal clearly.\n\n\"I want to practice talking with someone I'm meeting for the first time.\"\n\nNow, when you meet someone for the first time in Korean, you usually say:\n\n👉 안녕하세요! 처음 뵙겠습니다. (Hello! Nice to meet you.)\n👉 저는 [이름]입니다. (I am [name].)\n\n📝 Try introducing yourself using these phrases!`;\n      setCurrentStage('feedback');\n      setAiHasResponded(true);\n    } else if (userInput.includes('저녁')) {\n      // 두 번째 사용자 입력 후 AI 응답\n      aiResponse = '좋아! 그럼 나부터 가볍게 인사해볼게! 안녕~ 나는 ooo야. 만나서 반가워 :) 이제 너 차례야!';\n      \n      // 두 번째 사용자 입력 후 피드백 제공\n      newFeedback = `That's a good sentence! \"나는 저녁을 먹었어\" means \n\"I had dinner.\"\n  You used it well to talk about what you did.\nBut right now, we're introducing ourselves.\n  When you introduce yourself, it's more natural to say your name!\n\n👉 Here's how you can answer:\n안녕! 나는 ICIG야. (Hi! I'm ICIG.)\n만나서 반가워! 나는 켄이야. (Nice to meet you! I'm Ken.)\n\n📝 Want to try again?\nTry saying your name using \"나는 ○○야.\"`;      \n      setCurrentStage('feedback');\n    }\n    \n    // 메시지 목록에 AI 응답 추가 (id 추가)\n    const aiMessageId = generateId();\n    setMessages([...currentMessages, { \n      type: 'ai' as const, \n      text: aiResponse,\n      id: aiMessageId\n    }]);\n    \n    // 피드백 설정\n    if (newFeedback) {\n      setFeedback(newFeedback);\n      setShowFeedbackContent(true);\n    }\n  };\n\n  return (\n    <div className=\"v1_248\">\n      {/* 화살표 버튼 (나가기) */}\n      <div className=\"arrow-button\">\n        <img src={arrowIcon} alt=\"뒤로가기\" style={{ transform: 'scaleX(-1)' }} width=\"25\" height=\"25\" />\n      </div>\n      \n      {/* 로고 */}\n      <div className=\"logo-icon\">\n        <img src={logoIcon} alt=\"로고\" width=\"50\" height=\"50\" />\n      </div>\n      \n      {/* 타이틀 */}\n      <div className=\"title\">\n        <span>Context-aware learning</span>\n      </div>\n      \n      {/* 채팅 컨테이너 */}\n      <div className=\"chat-container\">\n        {messages.map((message) => (\n          <div \n            key={message.id} \n            className={message.type === 'ai' ? 'ai-message-bubble' : 'user-message-bubble'}\n          >\n            {/* AI 메시지인 경우에만 아바타와 재생 버튼 표시 */}\n            {message.type === 'ai' && (\n              <>\n                <div className=\"ai-avatar\">\n                  <img src={aiChatIcon} alt=\"AI 튜터\" width=\"65\" height=\"65\" />\n                </div>\n                <div \n                  className={`play-button ${isPlaying === message.id ? 'playing' : ''}`}\n                  onClick={() => handlePlayAudio(message.text, message.id)}\n                >\n                  {isPlaying === message.id ? '⏸' : '▶'}\n                </div>\n              </>\n            )}\n            {/* 사용자 메시지인 경우 사용자 아이콘 표시 */}\n            {message.type === 'user' && (\n              <div className=\"user-avatar\">\n                <img src={userChatIcon} alt=\"사용자\" width=\"40\" height=\"40\" />\n              </div>\n            )}\n            <div className=\"message-text\">{message.text}</div>\n          </div>\n        ))}\n      </div>\n      \n      {/* 마이크 버튼 */}\n      <div \n        className={`mic-button ${isRecording ? 'recording' : ''}`}\n        onClick={toggleRecording}\n      >\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%' }}>\n          <img src={microphoneIcon} alt=\"마이크\" width=\"30\" height=\"30\" />\n        </div>\n      </div>\n      \n      {/* 피드백 패널 */}\n      <div className=\"feedback-panel\">\n        <div className=\"feedback-title\">📢 Automated feedback system</div>\n        \n        {/* 피드백 배경 이미지 */}\n        <div className=\"feedback-background-image\">\n          <img src={feedbackBubbleIcon} alt=\"피드백 아이콘\" width=\"200\" height=\"200\" />\n        </div>\n        \n        {/* 피드백 박스 - AI가 응답하고 피드백이 있을 때 표시 */}\n        {showFeedbackContent && feedback && (\n          <div className=\"feedback-box\">\n            <div className=\"feedback-content\">{feedback}</div>\n            \n            {/* 피드백 음성 재생 버튼 */}\n            <div \n              className={`play-button ${isPlaying === 'feedback' ? 'playing' : ''}`}\n              style={{\n                position: 'absolute',\n                bottom: '20px', /* 피드백 내용 맨 끝 자연스럽게 배치 */\n                right: '20px'\n              }}\n              onClick={() => handlePlayAudio(feedback, 'feedback')}\n            >\n              {isPlaying === 'feedback' ? '⏸' : '▶'}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}