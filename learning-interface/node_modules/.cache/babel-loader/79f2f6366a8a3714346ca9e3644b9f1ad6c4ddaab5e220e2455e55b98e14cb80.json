{"ast":null,"code":"/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\n\n/**\r\n * @fileoverview The interleave function.\r\n * @see https://github.com/rochars/wavefile\r\n */\n\n/**\r\n * Interleave de-interleaved samples.\r\n * @param {!(Array|TypedArray)} samples The samples.\r\n * @return {!(Array|TypedArray)}\r\n */\nexport function interleave(samples) {\n  /** @type {!(Array|TypedArray)} */\n  let finalSamples = [];\n  if (samples.length > 0) {\n    if (samples[0].constructor !== Number) {\n      finalSamples = new Float64Array(samples[0].length * samples.length);\n      for (let i = 0, len = samples[0].length, x = 0; i < len; i++) {\n        for (let j = 0, subLen = samples.length; j < subLen; j++, x++) {\n          finalSamples[x] = samples[j][i];\n        }\n      }\n    } else {\n      finalSamples = samples;\n    }\n  }\n  return finalSamples;\n}\n\n/**\r\n * De-interleave samples into multiple channels.\r\n * @param {!(Array|TypedArray)} samples The samples.\r\n * @param {number} numChannels The number of channels to split the samples.\r\n * @param {Function} [OutputObject=Float64Array] The type of object to\r\n *   write the de-interleaved samples.\r\n * @return {!(Array|TypedArray)}\r\n */\nexport function deInterleave(samples, numChannels, OutputObject = Float64Array) {\n  /** @type {!(Array|TypedArray)} */\n  let finalSamples = [];\n  for (let i = 0; i < numChannels; i++) {\n    finalSamples[i] = new OutputObject(samples.length / numChannels);\n  }\n  for (let i = 0; i < numChannels; i++) {\n    for (let j = i, s = 0; j < samples.length; j += numChannels, s++) {\n      finalSamples[i][s] = samples[j];\n    }\n  }\n  return finalSamples;\n}","map":{"version":3,"names":["interleave","samples","finalSamples","length","constructor","Number","Float64Array","i","len","x","j","subLen","deInterleave","numChannels","OutputObject","s"],"sources":["C:/Users/kimmi/Desktop/learning-interface/learning-interface/node_modules/wavefile/lib/parsers/interleave.js"],"sourcesContent":["/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The interleave function.\r\n * @see https://github.com/rochars/wavefile\r\n */\r\n\r\n/**\r\n * Interleave de-interleaved samples.\r\n * @param {!(Array|TypedArray)} samples The samples.\r\n * @return {!(Array|TypedArray)}\r\n */\r\nexport function interleave(samples) {\r\n  /** @type {!(Array|TypedArray)} */\r\n  let finalSamples = [];\r\n  if (samples.length > 0) {\r\n    if (samples[0].constructor !== Number) {\r\n      finalSamples = new Float64Array(samples[0].length * samples.length);\r\n      for (let i = 0, len = samples[0].length, x = 0; i < len; i++) {\r\n        for (let j = 0, subLen = samples.length; j < subLen; j++, x++) {\r\n          finalSamples[x] = samples[j][i];\r\n        }\r\n      }\r\n    } else {\r\n      finalSamples = samples;\r\n    }\r\n  }\r\n  return finalSamples;\r\n}\r\n\r\n/**\r\n * De-interleave samples into multiple channels.\r\n * @param {!(Array|TypedArray)} samples The samples.\r\n * @param {number} numChannels The number of channels to split the samples.\r\n * @param {Function} [OutputObject=Float64Array] The type of object to\r\n *   write the de-interleaved samples.\r\n * @return {!(Array|TypedArray)}\r\n */\r\nexport function deInterleave(samples, numChannels, OutputObject=Float64Array) {\r\n  /** @type {!(Array|TypedArray)} */\r\n  let finalSamples = [];\r\n  for (let i = 0; i < numChannels; i++) {\r\n    finalSamples[i] = new OutputObject(samples.length / numChannels);\r\n  }\r\n  for (let i = 0; i < numChannels; i++) {\r\n    for (let j = i, s = 0; j < samples.length; j+= numChannels, s++) {\r\n      finalSamples[i][s] = samples[j];\r\n    }\r\n  }\r\n  return finalSamples;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,OAAO,EAAE;EAClC;EACA,IAAIC,YAAY,GAAG,EAAE;EACrB,IAAID,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;IACtB,IAAIF,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW,KAAKC,MAAM,EAAE;MACrCH,YAAY,GAAG,IAAII,YAAY,CAACL,OAAO,CAAC,CAAC,CAAC,CAACE,MAAM,GAAGF,OAAO,CAACE,MAAM,CAAC;MACnE,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGP,OAAO,CAAC,CAAC,CAAC,CAACE,MAAM,EAAEM,CAAC,GAAG,CAAC,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAC5D,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEC,MAAM,GAAGV,OAAO,CAACE,MAAM,EAAEO,CAAC,GAAGC,MAAM,EAAED,CAAC,EAAE,EAAED,CAAC,EAAE,EAAE;UAC7DP,YAAY,CAACO,CAAC,CAAC,GAAGR,OAAO,CAACS,CAAC,CAAC,CAACH,CAAC,CAAC;QACjC;MACF;IACF,CAAC,MAAM;MACLL,YAAY,GAAGD,OAAO;IACxB;EACF;EACA,OAAOC,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,YAAYA,CAACX,OAAO,EAAEY,WAAW,EAAEC,YAAY,GAACR,YAAY,EAAE;EAC5E;EACA,IAAIJ,YAAY,GAAG,EAAE;EACrB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,WAAW,EAAEN,CAAC,EAAE,EAAE;IACpCL,YAAY,CAACK,CAAC,CAAC,GAAG,IAAIO,YAAY,CAACb,OAAO,CAACE,MAAM,GAAGU,WAAW,CAAC;EAClE;EACA,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,WAAW,EAAEN,CAAC,EAAE,EAAE;IACpC,KAAK,IAAIG,CAAC,GAAGH,CAAC,EAAEQ,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGT,OAAO,CAACE,MAAM,EAAEO,CAAC,IAAGG,WAAW,EAAEE,CAAC,EAAE,EAAE;MAC/Db,YAAY,CAACK,CAAC,CAAC,CAACQ,CAAC,CAAC,GAAGd,OAAO,CAACS,CAAC,CAAC;IACjC;EACF;EACA,OAAOR,YAAY;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}