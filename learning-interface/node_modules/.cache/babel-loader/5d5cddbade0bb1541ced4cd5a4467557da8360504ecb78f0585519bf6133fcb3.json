{"ast":null,"code":"var _jsxFileName = \"/Users/bagjun-won/test-3d/learning-interface/src/context/LearningContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useRef, useEffect } from 'react';\nimport { AudioRecorder } from '../services/audioService.ts';\n\n// Í∏∞Î≥∏ Ïª®ÌÖçÏä§Ìä∏ ÏÉùÏÑ±\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LearningContext = /*#__PURE__*/createContext(undefined);\n\n// Í≥†Ïú† ID ÏÉùÏÑ± Ìï®Ïàò\nconst generateId = () => {\n  return Math.random().toString(36).substring(2, 15);\n};\nexport const LearningProvider = ({\n  children\n}) => {\n  _s();\n  // ÏÉÅÌÉú Í¥ÄÎ¶¨\n  const [messages, setMessages] = useState([{\n    type: 'ai',\n    text: 'Hello, ICIG! Tell me the situation you want to learn. For example, ordering at a caf√©!',\n    id: 'initial-message'\n  }]);\n  const [currentStage, setCurrentStage] = useState('initial');\n  const [feedback, setFeedback] = useState('');\n  const [showFeedbackContent, setShowFeedbackContent] = useState(false);\n  const [aiHasResponded, setAiHasResponded] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(null);\n\n  // AudioRecorder Ïù∏Ïä§ÌÑ¥Ïä§ Ï†ÄÏû•\n  const recorderRef = useRef(null);\n\n  // ÌòÑÏû¨ Ïû¨ÏÉù Ï§ëÏù∏ utterance Ï∞∏Ï°∞\n  const utteranceRef = useRef(null);\n\n  // Ïª¥Ìè¨ÎÑåÌä∏ ÎßàÏö¥Ìä∏ Ïãú AudioRecorder Ï¥àÍ∏∞Ìôî\n  useEffect(() => {\n    recorderRef.current = new AudioRecorder();\n    return () => {\n      // Ïª¥Ìè¨ÎÑåÌä∏ Ïñ∏ÎßàÏö¥Ìä∏ Ïãú Ïò§ÎîîÏò§ URL Ï†ïÎ¶¨\n      if (audioURL) {\n        AudioRecorder.revokeAudioURL(audioURL);\n      }\n    };\n  }, [audioURL]);\n\n  // Î©îÏãúÏßÄ Ï∂îÍ∞Ä Ìï®Ïàò\n  const addMessage = message => {\n    const newMessage = {\n      ...message,\n      id: generateId()\n    };\n    setMessages(prev => [...prev, newMessage]);\n\n    // AI ÏùëÎãµÏù∏ Í≤ΩÏö∞ ÌîºÎìúÎ∞± ÏóÖÎç∞Ïù¥Ìä∏\n    if (message.type === 'ai') {\n      simulateAIResponse(message.text);\n    } else if (message.type === 'user') {\n      // ÏÇ¨Ïö©Ïûê ÏûÖÎ†• ÌõÑ AI ÏùëÎãµ ÏãúÎÆ¨Î†àÏù¥ÏÖò\n      setTimeout(() => {\n        let aiResponse = '';\n        if (message.text.includes('first time')) {\n          aiResponse = 'Ï¢ãÏïÑ! Í∑∏Îüº ÎÇòÎ∂ÄÌÑ∞ Í∞ÄÎ≥çÍ≤å Ïù∏ÏÇ¨Ìï¥Î≥ºÍ≤å! ÏïàÎÖï~ ÎÇòÎäî oooÏïº. ÎßåÎÇòÏÑú Î∞òÍ∞ÄÏõå :) Ïù¥Ï†ú ÎÑà Ï∞®Î°ÄÏïº!';\n          updateFeedback(`Good job! You expressed your learning goal clearly.\n\n\"I want to practice talking with someone I'm meeting for the first time.\"\n\nNow, when you meet someone for the first time in Korean, you usually say:\n\nüëâ ÏïàÎÖïÌïòÏÑ∏Ïöî! Ï≤òÏùå ÎµôÍ≤†ÏäµÎãàÎã§. (Hello! Nice to meet you.)\nüëâ Ï†ÄÎäî [Ïù¥Î¶Ñ]ÏûÖÎãàÎã§. (I am [name].)\n\nüìù Try introducing yourself using these phrases!`);\n        } else if (message.text.includes('Ï†ÄÎÖÅ')) {\n          aiResponse = 'ÎÑ§, Ï†ÄÎÖÅ ÏãùÏÇ¨Îäî Ïñ¥Îï†Ïñ¥Ïöî? Ï†ÄÎäî ÏïÑÏßÅ Ï†ÄÎÖÅÏùÑ Î®πÏßÄ ÏïäÏïòÏñ¥Ïöî.';\n          updateFeedback(`That's a good sentence! \"ÎÇòÎäî Ï†ÄÎÖÅÏùÑ Î®πÏóàÏñ¥\" means \n\"I had dinner.\"\n  You used it well to talk about what you did.\nBut right now, we're introducing ourselves.\n  When you introduce yourself, it's more natural to say your name!\n\nüëâ Here's how you can answer:\nÏïàÎÖï! ÎÇòÎäî ICIGÏïº. (Hi! I'm ICIG.)\nÎßåÎÇòÏÑú Î∞òÍ∞ÄÏõå! ÎÇòÎäî ÏºÑÏù¥Ïïº. (Nice to meet you! I'm Ken.)\n\nüìù Want to try again?\nTry saying your name using \"ÎÇòÎäî ‚óã‚óãÏïº.\"`);\n        }\n        addMessage({\n          type: 'ai',\n          text: aiResponse\n        });\n      }, 1000);\n    }\n  };\n\n  // ÌîºÎìúÎ∞± ÏóÖÎç∞Ïù¥Ìä∏ Ìï®Ïàò\n  const updateFeedback = newFeedback => {\n    setFeedback(newFeedback);\n    setShowFeedbackContent(true);\n    setCurrentStage('feedback');\n    setAiHasResponded(true);\n  };\n\n  // AI ÏùëÎãµ ÏãúÎÆ¨Î†àÏù¥ÏÖò\n  const simulateAIResponse = text => {\n    // AI ÏùëÎãµ Î°úÏßÅÏùÄ Ïó¨Í∏∞ÏÑú Íµ¨ÌòÑ\n    // Ïã§Ï†ú ÌôòÍ≤ΩÏóêÏÑúÎäî API ÏöîÏ≤≠ Îì±ÏúºÎ°ú ÎåÄÏ≤¥\n  };\n\n  // ÌÖçÏä§Ìä∏Î•º ÏùåÏÑ±ÏúºÎ°ú Î≥ÄÌôò\n  const handlePlayAudio = (text, id) => {\n    if ('speechSynthesis' in window) {\n      // ÌòÑÏû¨ ÌÅ¥Î¶≠Ìïú Í≤ÉÍ≥º ÎèôÏùºÌïú Î≤ÑÌäºÏù¥ Ïû¨ÏÉù Ï§ëÏù¥Î©¥ (Ï§ëÏßÄ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú)\n      if (isPlaying === id) {\n        window.speechSynthesis.cancel(); // ÌòÑÏû¨ Ïû¨ÏÉù Ï§ëÏù∏ Ïò§ÎîîÏò§ Ï§ëÏßÄ\n        setIsPlaying(null); // Ïû¨ÏÉù ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî\n        return; // Ìï®Ïàò Ï¢ÖÎ£å\n      }\n\n      // Îã§Î•∏ Î≤ÑÌäºÏù¥ Ïû¨ÏÉù Ï§ëÏù¥Î©¥ Ìï¥Îãπ Ïò§ÎîîÏò§ Ï§ëÏßÄ\n      if (isPlaying) {\n        window.speechSynthesis.cancel();\n      }\n\n      // ÏÉà utterance ÏÉùÏÑ±\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = text.match(/[„Ñ±-„Ö£|Í∞Ä-Ìû£]/) ? 'ko-KR' : 'en-US';\n\n      // Ï∞∏Ï°∞ Ï†ÄÏû•\n      utteranceRef.current = utterance;\n\n      // Ïû¨ÏÉù ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏\n      setIsPlaying(id);\n\n      // Ïû¨ÏÉù ÏôÑÎ£å Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨\n      utterance.onend = () => {\n        setIsPlaying(null);\n        utteranceRef.current = null;\n      };\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.log('Text-to-speech not supported in this browser');\n    }\n  };\n\n  // ÎÖπÏùå ÏãúÏûë/Ï§ëÏßÄ Ìï®Ïàò\n  const toggleRecording = async () => {\n    if (isRecording) {\n      try {\n        // ÎÖπÏùå Ï§ëÏßÄ\n        setIsRecording(false);\n        if (recorderRef.current) {\n          const audioBlob = await recorderRef.current.stopRecording();\n          const url = AudioRecorder.createAudioURL(audioBlob);\n          setAudioURL(url);\n\n          // ÏÇ¨Ïö©Ïûê ÏûÖÎ†• ÏãúÎÆ¨Î†àÏù¥ÏÖò\n          const userInput = messages.length === 1 ? \"I want to practice talking with someone I'm meeting for the first time.\" : \"ÎÇòÎäî Ï†ÄÎÖÅÏùÑ Î®πÏóàÏñ¥.\";\n\n          // Î©îÏãúÏßÄ Ï∂îÍ∞Ä\n          addMessage({\n            type: 'user',\n            text: userInput\n          });\n          setCurrentStage('userInput');\n        }\n      } catch (error) {\n        console.error('ÎÖπÏùå Ï§ëÏßÄ Ïò§Î•ò:', error);\n        setIsRecording(false);\n      }\n    } else {\n      try {\n        // ÎÖπÏùå ÏãúÏûë\n        if (recorderRef.current) {\n          await recorderRef.current.startRecording();\n          setIsRecording(true);\n        }\n      } catch (error) {\n        console.error('ÎÖπÏùå ÏãúÏûë Ïò§Î•ò:', error);\n      }\n    }\n  };\n\n  // Ïª®ÌÖçÏä§Ìä∏ Í∞í\n  const contextValue = {\n    messages,\n    currentStage,\n    feedback,\n    isRecording,\n    audioURL,\n    isPlaying,\n    showFeedbackContent,\n    aiHasResponded,\n    addMessage,\n    setCurrentStage,\n    setFeedback,\n    toggleRecording,\n    handlePlayAudio,\n    setShowFeedbackContent,\n    setAiHasResponded\n  };\n  return /*#__PURE__*/_jsxDEV(LearningContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n\n// Ïª®ÌÖçÏä§Ìä∏ ÏÇ¨Ïö©ÏùÑ ÏúÑÌïú Ïª§Ïä§ÌÖÄ ÌõÖ\n_s(LearningProvider, \"zLOtajP1hlBKoPs7s4LEBX4bfC8=\");\n_c = LearningProvider;\nexport const useLearning = () => {\n  _s2();\n  const context = useContext(LearningContext);\n  if (context === undefined) {\n    throw new Error('useLearning must be used within a LearningProvider');\n  }\n  return context;\n};\n_s2(useLearning, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LearningProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useEffect","AudioRecorder","jsxDEV","_jsxDEV","LearningContext","undefined","generateId","Math","random","toString","substring","LearningProvider","children","_s","messages","setMessages","type","text","id","currentStage","setCurrentStage","feedback","setFeedback","showFeedbackContent","setShowFeedbackContent","aiHasResponded","setAiHasResponded","isRecording","setIsRecording","audioURL","setAudioURL","isPlaying","setIsPlaying","recorderRef","utteranceRef","current","revokeAudioURL","addMessage","message","newMessage","prev","simulateAIResponse","setTimeout","aiResponse","includes","updateFeedback","newFeedback","handlePlayAudio","window","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","lang","match","onend","speak","console","log","toggleRecording","audioBlob","stopRecording","url","createAudioURL","userInput","length","error","startRecording","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLearning","_s2","context","Error","$RefreshReg$"],"sources":["/Users/bagjun-won/test-3d/learning-interface/src/context/LearningContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useEffect } from 'react';\nimport { Message, LearningStage, LearningContextType } from '../types/index';\nimport { AudioRecorder } from '../services/audioService.ts';\n\n// Í∏∞Î≥∏ Ïª®ÌÖçÏä§Ìä∏ ÏÉùÏÑ±\nconst LearningContext = createContext<LearningContextType | undefined>(undefined);\n\n// Í≥†Ïú† ID ÏÉùÏÑ± Ìï®Ïàò\nconst generateId = () => {\n  return Math.random().toString(36).substring(2, 15);\n};\n\nexport const LearningProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // ÏÉÅÌÉú Í¥ÄÎ¶¨\n  const [messages, setMessages] = useState<Message[]>([\n    { \n      type: 'ai', \n      text: 'Hello, ICIG! Tell me the situation you want to learn. For example, ordering at a caf√©!',\n      id: 'initial-message'\n    }\n  ]);\n  const [currentStage, setCurrentStage] = useState<LearningStage>('initial');\n  const [feedback, setFeedback] = useState<string>('');\n  const [showFeedbackContent, setShowFeedbackContent] = useState(false);\n  const [aiHasResponded, setAiHasResponded] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState<string | null>(null);\n  const [isPlaying, setIsPlaying] = useState<string | null>(null);\n  \n  // AudioRecorder Ïù∏Ïä§ÌÑ¥Ïä§ Ï†ÄÏû•\n  const recorderRef = useRef<AudioRecorder | null>(null);\n  \n  // ÌòÑÏû¨ Ïû¨ÏÉù Ï§ëÏù∏ utterance Ï∞∏Ï°∞\n  const utteranceRef = useRef<SpeechSynthesisUtterance | null>(null);\n  \n  // Ïª¥Ìè¨ÎÑåÌä∏ ÎßàÏö¥Ìä∏ Ïãú AudioRecorder Ï¥àÍ∏∞Ìôî\n  useEffect(() => {\n    recorderRef.current = new AudioRecorder();\n    \n    return () => {\n      // Ïª¥Ìè¨ÎÑåÌä∏ Ïñ∏ÎßàÏö¥Ìä∏ Ïãú Ïò§ÎîîÏò§ URL Ï†ïÎ¶¨\n      if (audioURL) {\n        AudioRecorder.revokeAudioURL(audioURL);\n      }\n    };\n  }, [audioURL]);\n  \n  // Î©îÏãúÏßÄ Ï∂îÍ∞Ä Ìï®Ïàò\n  const addMessage = (message: Omit<Message, 'id'>) => {\n    const newMessage = {\n      ...message,\n      id: generateId()\n    };\n    \n    setMessages(prev => [...prev, newMessage]);\n    \n    // AI ÏùëÎãµÏù∏ Í≤ΩÏö∞ ÌîºÎìúÎ∞± ÏóÖÎç∞Ïù¥Ìä∏\n    if (message.type === 'ai') {\n      simulateAIResponse(message.text);\n    } else if (message.type === 'user') {\n      // ÏÇ¨Ïö©Ïûê ÏûÖÎ†• ÌõÑ AI ÏùëÎãµ ÏãúÎÆ¨Î†àÏù¥ÏÖò\n      setTimeout(() => {\n        let aiResponse = '';\n        \n        if (message.text.includes('first time')) {\n          aiResponse = 'Ï¢ãÏïÑ! Í∑∏Îüº ÎÇòÎ∂ÄÌÑ∞ Í∞ÄÎ≥çÍ≤å Ïù∏ÏÇ¨Ìï¥Î≥ºÍ≤å! ÏïàÎÖï~ ÎÇòÎäî oooÏïº. ÎßåÎÇòÏÑú Î∞òÍ∞ÄÏõå :) Ïù¥Ï†ú ÎÑà Ï∞®Î°ÄÏïº!';\n          updateFeedback(`Good job! You expressed your learning goal clearly.\n\n\"I want to practice talking with someone I'm meeting for the first time.\"\n\nNow, when you meet someone for the first time in Korean, you usually say:\n\nüëâ ÏïàÎÖïÌïòÏÑ∏Ïöî! Ï≤òÏùå ÎµôÍ≤†ÏäµÎãàÎã§. (Hello! Nice to meet you.)\nüëâ Ï†ÄÎäî [Ïù¥Î¶Ñ]ÏûÖÎãàÎã§. (I am [name].)\n\nüìù Try introducing yourself using these phrases!`);\n        } else if (message.text.includes('Ï†ÄÎÖÅ')) {\n          aiResponse = 'ÎÑ§, Ï†ÄÎÖÅ ÏãùÏÇ¨Îäî Ïñ¥Îï†Ïñ¥Ïöî? Ï†ÄÎäî ÏïÑÏßÅ Ï†ÄÎÖÅÏùÑ Î®πÏßÄ ÏïäÏïòÏñ¥Ïöî.';\n          updateFeedback(`That's a good sentence! \"ÎÇòÎäî Ï†ÄÎÖÅÏùÑ Î®πÏóàÏñ¥\" means \n\"I had dinner.\"\n  You used it well to talk about what you did.\nBut right now, we're introducing ourselves.\n  When you introduce yourself, it's more natural to say your name!\n\nüëâ Here's how you can answer:\nÏïàÎÖï! ÎÇòÎäî ICIGÏïº. (Hi! I'm ICIG.)\nÎßåÎÇòÏÑú Î∞òÍ∞ÄÏõå! ÎÇòÎäî ÏºÑÏù¥Ïïº. (Nice to meet you! I'm Ken.)\n\nüìù Want to try again?\nTry saying your name using \"ÎÇòÎäî ‚óã‚óãÏïº.\"`);\n        }\n        \n        addMessage({\n          type: 'ai',\n          text: aiResponse\n        });\n      }, 1000);\n    }\n  };\n  \n  // ÌîºÎìúÎ∞± ÏóÖÎç∞Ïù¥Ìä∏ Ìï®Ïàò\n  const updateFeedback = (newFeedback: string) => {\n    setFeedback(newFeedback);\n    setShowFeedbackContent(true);\n    setCurrentStage('feedback');\n    setAiHasResponded(true);\n  };\n  \n  // AI ÏùëÎãµ ÏãúÎÆ¨Î†àÏù¥ÏÖò\n  const simulateAIResponse = (text: string) => {\n    // AI ÏùëÎãµ Î°úÏßÅÏùÄ Ïó¨Í∏∞ÏÑú Íµ¨ÌòÑ\n    // Ïã§Ï†ú ÌôòÍ≤ΩÏóêÏÑúÎäî API ÏöîÏ≤≠ Îì±ÏúºÎ°ú ÎåÄÏ≤¥\n  };\n  \n  // ÌÖçÏä§Ìä∏Î•º ÏùåÏÑ±ÏúºÎ°ú Î≥ÄÌôò\n  const handlePlayAudio = (text: string, id: string) => {\n    if ('speechSynthesis' in window) {\n      // ÌòÑÏû¨ ÌÅ¥Î¶≠Ìïú Í≤ÉÍ≥º ÎèôÏùºÌïú Î≤ÑÌäºÏù¥ Ïû¨ÏÉù Ï§ëÏù¥Î©¥ (Ï§ëÏßÄ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú)\n      if (isPlaying === id) {\n        window.speechSynthesis.cancel(); // ÌòÑÏû¨ Ïû¨ÏÉù Ï§ëÏù∏ Ïò§ÎîîÏò§ Ï§ëÏßÄ\n        setIsPlaying(null); // Ïû¨ÏÉù ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî\n        return; // Ìï®Ïàò Ï¢ÖÎ£å\n      }\n      \n      // Îã§Î•∏ Î≤ÑÌäºÏù¥ Ïû¨ÏÉù Ï§ëÏù¥Î©¥ Ìï¥Îãπ Ïò§ÎîîÏò§ Ï§ëÏßÄ\n      if (isPlaying) {\n        window.speechSynthesis.cancel();\n      }\n      \n      // ÏÉà utterance ÏÉùÏÑ±\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = text.match(/[„Ñ±-„Ö£|Í∞Ä-Ìû£]/) ? 'ko-KR' : 'en-US';\n      \n      // Ï∞∏Ï°∞ Ï†ÄÏû•\n      utteranceRef.current = utterance;\n      \n      // Ïû¨ÏÉù ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏\n      setIsPlaying(id);\n      \n      // Ïû¨ÏÉù ÏôÑÎ£å Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨\n      utterance.onend = () => {\n        setIsPlaying(null);\n        utteranceRef.current = null;\n      };\n      \n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.log('Text-to-speech not supported in this browser');\n    }\n  };\n  \n  // ÎÖπÏùå ÏãúÏûë/Ï§ëÏßÄ Ìï®Ïàò\n  const toggleRecording = async () => {\n    if (isRecording) {\n      try {\n        // ÎÖπÏùå Ï§ëÏßÄ\n        setIsRecording(false);\n        \n        if (recorderRef.current) {\n          const audioBlob = await recorderRef.current.stopRecording();\n          const url = AudioRecorder.createAudioURL(audioBlob);\n          setAudioURL(url);\n          \n          // ÏÇ¨Ïö©Ïûê ÏûÖÎ†• ÏãúÎÆ¨Î†àÏù¥ÏÖò\n          const userInput = messages.length === 1\n            ? \"I want to practice talking with someone I'm meeting for the first time.\"\n            : \"ÎÇòÎäî Ï†ÄÎÖÅÏùÑ Î®πÏóàÏñ¥.\";\n          \n          // Î©îÏãúÏßÄ Ï∂îÍ∞Ä\n          addMessage({\n            type: 'user',\n            text: userInput\n          });\n          \n          setCurrentStage('userInput');\n        }\n      } catch (error) {\n        console.error('ÎÖπÏùå Ï§ëÏßÄ Ïò§Î•ò:', error);\n        setIsRecording(false);\n      }\n    } else {\n      try {\n        // ÎÖπÏùå ÏãúÏûë\n        if (recorderRef.current) {\n          await recorderRef.current.startRecording();\n          setIsRecording(true);\n        }\n      } catch (error) {\n        console.error('ÎÖπÏùå ÏãúÏûë Ïò§Î•ò:', error);\n      }\n    }\n  };\n  \n  // Ïª®ÌÖçÏä§Ìä∏ Í∞í\n  const contextValue: LearningContextType = {\n    messages,\n    currentStage,\n    feedback,\n    isRecording,\n    audioURL,\n    isPlaying,\n    showFeedbackContent,\n    aiHasResponded,\n    \n    addMessage,\n    setCurrentStage,\n    setFeedback,\n    toggleRecording,\n    handlePlayAudio,\n    setShowFeedbackContent,\n    setAiHasResponded\n  };\n  \n  return (\n    <LearningContext.Provider value={contextValue}>\n      {children}\n    </LearningContext.Provider>\n  );\n};\n\n// Ïª®ÌÖçÏä§Ìä∏ ÏÇ¨Ïö©ÏùÑ ÏúÑÌïú Ïª§Ïä§ÌÖÄ ÌõÖ\nexport const useLearning = () => {\n  const context = useContext(LearningContext);\n  \n  if (context === undefined) {\n    throw new Error('useLearning must be used within a LearningProvider');\n  }\n  \n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}