{"ast":null,"code":"/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\n\n/**\r\n * @fileoverview Butterworth LPF. Based on the Butterworth LPF from Fili.js.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\n\n/**\r\n * Butterworth LPF.\r\n */\nexport class ButterworthLPF {\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\n  constructor(order, sampleRate, cutOff) {\n    /** @type {!Array} */\n    let filters = [];\n    for (let i = 0; i < order; i++) {\n      filters.push(this.getCoeffs_({\n        Fs: sampleRate,\n        Fc: cutOff,\n        Q: 0.5 / Math.sin(Math.PI / (order * 2) * (i + 0.5))\n      }));\n    }\n    this.stages = [];\n    for (let i = 0; i < filters.length; i++) {\n      this.stages[i] = {\n        b0: filters[i].b[0],\n        b1: filters[i].b[1],\n        b2: filters[i].b[2],\n        a1: filters[i].a[0],\n        a2: filters[i].a[1],\n        k: filters[i].k,\n        z: [0, 0]\n      };\n    }\n  }\n\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\n  filter(sample) {\n    /** @type {number} */\n    let out = sample;\n    for (let i = 0, len = this.stages.length; i < len; i++) {\n      out = this.runStage_(i, out);\n    }\n    return out;\n  }\n\n  /**\r\n   * @param {!Object} params The filter params.\r\n   * @return {!Object}\r\n   */\n  getCoeffs_(params) {\n    /** @type {!Object} */\n    let coeffs = {};\n    coeffs.a = [];\n    coeffs.b = [];\n    /** @type {!Object} */\n    let p = this.preCalc_(params, coeffs);\n    coeffs.k = 1;\n    coeffs.b.push((1 - p.cw) / (2 * p.a0));\n    coeffs.b.push(2 * coeffs.b[0]);\n    coeffs.b.push(coeffs.b[0]);\n    return coeffs;\n  }\n\n  /**\r\n   * @param {!Object} params The filter params.\r\n   * @param {!Object} coeffs The coefficients template.\r\n   * @return {!Object}\r\n   */\n  preCalc_(params, coeffs) {\n    /** @type {!Object} */\n    let pre = {};\n    /** @type {number} */\n    let w = 2 * Math.PI * params.Fc / params.Fs;\n    pre.alpha = Math.sin(w) / (2 * params.Q);\n    pre.cw = Math.cos(w);\n    pre.a0 = 1 + pre.alpha;\n    coeffs.a0 = pre.a0;\n    coeffs.a.push(-2 * pre.cw / pre.a0);\n    coeffs.k = 1;\n    coeffs.a.push((1 - pre.alpha) / pre.a0);\n    return pre;\n  }\n\n  /**\r\n   * @param {number} i The stage index.\r\n   * @param {number} sample The sample.\r\n   * @return {number}\r\n   */\n  runStage_(i, sample) {\n    /** @type {number} */\n    let temp = sample * this.stages[i].k - this.stages[i].a1 * this.stages[i].z[0] - this.stages[i].a2 * this.stages[i].z[1];\n    /** @type {number} */\n    let out = this.stages[i].b0 * temp + this.stages[i].b1 * this.stages[i].z[0] + this.stages[i].b2 * this.stages[i].z[1];\n    this.stages[i].z[1] = this.stages[i].z[0];\n    this.stages[i].z[0] = temp;\n    return out;\n  }\n\n  /**\r\n   * Reset the filter.\r\n   */\n  reset() {\n    for (let i = 0; i < this.stages.length; i++) {\n      this.stages[i].z = [0, 0];\n    }\n  }\n}","map":{"version":3,"names":["ButterworthLPF","constructor","order","sampleRate","cutOff","filters","i","push","getCoeffs_","Fs","Fc","Q","Math","sin","PI","stages","length","b0","b","b1","b2","a1","a","a2","k","z","filter","sample","out","len","runStage_","params","coeffs","p","preCalc_","cw","a0","pre","w","alpha","cos","temp","reset"],"sources":["C:/Users/kimmi/Desktop/learning-interface/learning-interface/node_modules/wavefile/lib/resampler/butterworth-lpf.js"],"sourcesContent":["/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview Butterworth LPF. Based on the Butterworth LPF from Fili.js.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * Butterworth LPF.\r\n */\r\nexport class ButterworthLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    /** @type {!Array} */\r\n    let filters = [];\r\n    for (let i = 0; i < order; i++) {\r\n      filters.push(this.getCoeffs_({\r\n        Fs: sampleRate,\r\n        Fc: cutOff,\r\n        Q: 0.5 / (Math.sin((Math.PI / (order * 2)) * (i + 0.5)))\r\n      }));\r\n    }\r\n    this.stages = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      this.stages[i] = {\r\n        b0 : filters[i].b[0],\r\n        b1 : filters[i].b[1],\r\n        b2 : filters[i].b[2],\r\n        a1 : filters[i].a[0],\r\n        a2 : filters[i].a[1],\r\n        k : filters[i].k,\r\n        z : [0, 0]\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    /** @type {number} */\r\n    let out = sample;\r\n    for (let i = 0, len = this.stages.length; i < len; i++) {\r\n      out = this.runStage_(i, out);\r\n    }\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * @param {!Object} params The filter params.\r\n   * @return {!Object}\r\n   */\r\n  getCoeffs_(params) {\r\n    /** @type {!Object} */\r\n    let coeffs = {};\r\n    coeffs.a = [];\r\n    coeffs.b = [];\r\n    /** @type {!Object} */\r\n    let p = this.preCalc_(params, coeffs);\r\n    coeffs.k = 1;\r\n    coeffs.b.push((1 - p.cw) / (2 * p.a0));\r\n    coeffs.b.push(2 * coeffs.b[0]);\r\n    coeffs.b.push(coeffs.b[0]);\r\n    return coeffs;\r\n  }\r\n\r\n  /**\r\n   * @param {!Object} params The filter params.\r\n   * @param {!Object} coeffs The coefficients template.\r\n   * @return {!Object}\r\n   */\r\n  preCalc_(params, coeffs) {\r\n    /** @type {!Object} */\r\n    let pre = {};\r\n    /** @type {number} */\r\n    let w = 2 * Math.PI * params.Fc / params.Fs;\r\n    pre.alpha = Math.sin(w) / (2 * params.Q);\r\n    pre.cw = Math.cos(w);\r\n    pre.a0 = 1 + pre.alpha;\r\n    coeffs.a0 = pre.a0;\r\n    coeffs.a.push((-2 * pre.cw) / pre.a0);\r\n    coeffs.k = 1;\r\n    coeffs.a.push((1 - pre.alpha) / pre.a0);\r\n    return pre;\r\n  }\r\n  \r\n  /**\r\n   * @param {number} i The stage index.\r\n   * @param {number} sample The sample.\r\n   * @return {number}\r\n   */\r\n  runStage_(i, sample) {\r\n    /** @type {number} */\r\n    let temp = sample * this.stages[i].k - this.stages[i].a1 *\r\n      this.stages[i].z[0] - this.stages[i].a2 * this.stages[i].z[1];\r\n    /** @type {number} */\r\n    let out = this.stages[i].b0 * temp + this.stages[i].b1 *\r\n      this.stages[i].z[0] + this.stages[i].b2 * this.stages[i].z[1];\r\n    this.stages[i].z[1] = this.stages[i].z[0];\r\n    this.stages[i].z[0] = temp;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    for (let i = 0; i < this.stages.length; i++) {\r\n      this.stages[i].z = [0, 0];\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,CAAC;EAE1B;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAE;IACrC;IACA,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,EAAEI,CAAC,EAAE,EAAE;MAC9BD,OAAO,CAACE,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC;QAC3BC,EAAE,EAAEN,UAAU;QACdO,EAAE,EAAEN,MAAM;QACVO,CAAC,EAAE,GAAG,GAAIC,IAAI,CAACC,GAAG,CAAED,IAAI,CAACE,EAAE,IAAIZ,KAAK,GAAG,CAAC,CAAC,IAAKI,CAAC,GAAG,GAAG,CAAC;MACxD,CAAC,CAAC,CAAC;IACL;IACA,IAAI,CAACS,MAAM,GAAG,EAAE;IAChB,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAACW,MAAM,EAAEV,CAAC,EAAE,EAAE;MACvC,IAAI,CAACS,MAAM,CAACT,CAAC,CAAC,GAAG;QACfW,EAAE,EAAGZ,OAAO,CAACC,CAAC,CAAC,CAACY,CAAC,CAAC,CAAC,CAAC;QACpBC,EAAE,EAAGd,OAAO,CAACC,CAAC,CAAC,CAACY,CAAC,CAAC,CAAC,CAAC;QACpBE,EAAE,EAAGf,OAAO,CAACC,CAAC,CAAC,CAACY,CAAC,CAAC,CAAC,CAAC;QACpBG,EAAE,EAAGhB,OAAO,CAACC,CAAC,CAAC,CAACgB,CAAC,CAAC,CAAC,CAAC;QACpBC,EAAE,EAAGlB,OAAO,CAACC,CAAC,CAAC,CAACgB,CAAC,CAAC,CAAC,CAAC;QACpBE,CAAC,EAAGnB,OAAO,CAACC,CAAC,CAAC,CAACkB,CAAC;QAChBC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC;MACX,CAAC;IACH;EACF;;EAEA;AACF;AACA;AACA;EACEC,MAAMA,CAACC,MAAM,EAAE;IACb;IACA,IAAIC,GAAG,GAAGD,MAAM;IAChB,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEuB,GAAG,GAAG,IAAI,CAACd,MAAM,CAACC,MAAM,EAAEV,CAAC,GAAGuB,GAAG,EAAEvB,CAAC,EAAE,EAAE;MACtDsB,GAAG,GAAG,IAAI,CAACE,SAAS,CAACxB,CAAC,EAAEsB,GAAG,CAAC;IAC9B;IACA,OAAOA,GAAG;EACZ;;EAEA;AACF;AACA;AACA;EACEpB,UAAUA,CAACuB,MAAM,EAAE;IACjB;IACA,IAAIC,MAAM,GAAG,CAAC,CAAC;IACfA,MAAM,CAACV,CAAC,GAAG,EAAE;IACbU,MAAM,CAACd,CAAC,GAAG,EAAE;IACb;IACA,IAAIe,CAAC,GAAG,IAAI,CAACC,QAAQ,CAACH,MAAM,EAAEC,MAAM,CAAC;IACrCA,MAAM,CAACR,CAAC,GAAG,CAAC;IACZQ,MAAM,CAACd,CAAC,CAACX,IAAI,CAAC,CAAC,CAAC,GAAG0B,CAAC,CAACE,EAAE,KAAK,CAAC,GAAGF,CAAC,CAACG,EAAE,CAAC,CAAC;IACtCJ,MAAM,CAACd,CAAC,CAACX,IAAI,CAAC,CAAC,GAAGyB,MAAM,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9Bc,MAAM,CAACd,CAAC,CAACX,IAAI,CAACyB,MAAM,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOc,MAAM;EACf;;EAEA;AACF;AACA;AACA;AACA;EACEE,QAAQA,CAACH,MAAM,EAAEC,MAAM,EAAE;IACvB;IACA,IAAIK,GAAG,GAAG,CAAC,CAAC;IACZ;IACA,IAAIC,CAAC,GAAG,CAAC,GAAG1B,IAAI,CAACE,EAAE,GAAGiB,MAAM,CAACrB,EAAE,GAAGqB,MAAM,CAACtB,EAAE;IAC3C4B,GAAG,CAACE,KAAK,GAAG3B,IAAI,CAACC,GAAG,CAACyB,CAAC,CAAC,IAAI,CAAC,GAAGP,MAAM,CAACpB,CAAC,CAAC;IACxC0B,GAAG,CAACF,EAAE,GAAGvB,IAAI,CAAC4B,GAAG,CAACF,CAAC,CAAC;IACpBD,GAAG,CAACD,EAAE,GAAG,CAAC,GAAGC,GAAG,CAACE,KAAK;IACtBP,MAAM,CAACI,EAAE,GAAGC,GAAG,CAACD,EAAE;IAClBJ,MAAM,CAACV,CAAC,CAACf,IAAI,CAAE,CAAC,CAAC,GAAG8B,GAAG,CAACF,EAAE,GAAIE,GAAG,CAACD,EAAE,CAAC;IACrCJ,MAAM,CAACR,CAAC,GAAG,CAAC;IACZQ,MAAM,CAACV,CAAC,CAACf,IAAI,CAAC,CAAC,CAAC,GAAG8B,GAAG,CAACE,KAAK,IAAIF,GAAG,CAACD,EAAE,CAAC;IACvC,OAAOC,GAAG;EACZ;;EAEA;AACF;AACA;AACA;AACA;EACEP,SAASA,CAACxB,CAAC,EAAEqB,MAAM,EAAE;IACnB;IACA,IAAIc,IAAI,GAAGd,MAAM,GAAG,IAAI,CAACZ,MAAM,CAACT,CAAC,CAAC,CAACkB,CAAC,GAAG,IAAI,CAACT,MAAM,CAACT,CAAC,CAAC,CAACe,EAAE,GACtD,IAAI,CAACN,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,MAAM,CAACT,CAAC,CAAC,CAACiB,EAAE,GAAG,IAAI,CAACR,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,CAAC,CAAC,CAAC;IAC/D;IACA,IAAIG,GAAG,GAAG,IAAI,CAACb,MAAM,CAACT,CAAC,CAAC,CAACW,EAAE,GAAGwB,IAAI,GAAG,IAAI,CAAC1B,MAAM,CAACT,CAAC,CAAC,CAACa,EAAE,GACpD,IAAI,CAACJ,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,MAAM,CAACT,CAAC,CAAC,CAACc,EAAE,GAAG,IAAI,CAACL,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,CAAC,CAAC,CAAC;IAC/D,IAAI,CAACV,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,CAAC,CAAC,CAAC;IACzC,IAAI,CAACV,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,CAAC,CAAC,CAAC,GAAGgB,IAAI;IAC1B,OAAOb,GAAG;EACZ;;EAEA;AACF;AACA;EACEc,KAAKA,CAAA,EAAG;IACN,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACS,MAAM,CAACC,MAAM,EAAEV,CAAC,EAAE,EAAE;MAC3C,IAAI,CAACS,MAAM,CAACT,CAAC,CAAC,CAACmB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}