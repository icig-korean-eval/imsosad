{"ast":null,"code":"var _jsxFileName = \"/Users/bagjun-won/test-3d/learning-interface/src/components/ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { AudioRecorder } from '../utils/audioUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  messages,\n  currentPage,\n  onVoiceInput\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const recorderRef = useRef(null);\n\n  // Function to handle text-to-speech for AI messages\n  const handlePlayAudio = text => {\n    // In a real app, this would call a text-to-speech API\n    // For now, we'll use the browser's built-in speech synthesis\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = text.match(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/) ? 'ko-KR' : 'en-US';\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.log('Text-to-speech not supported in this browser');\n    }\n  };\n\n  // Initialize the recorder on component mount\n  useEffect(() => {\n    recorderRef.current = new AudioRecorder();\n\n    // Clean up audio URL when component unmounts\n    return () => {\n      if (audioURL) {\n        AudioRecorder.revokeAudioURL(audioURL);\n      }\n    };\n  }, [audioURL]); // Adding audioURL to the dependency array\n\n  // Function to handle voice recording\n  const handleMicClick = async () => {\n    if (isRecording) {\n      try {\n        // Stop recording\n        setIsRecording(false);\n        if (recorderRef.current) {\n          const audioBlob = await recorderRef.current.stopRecording();\n          const url = AudioRecorder.createAudioURL(audioBlob);\n          setAudioURL(url);\n\n          // In a real application, you would send this blob to your speech-to-text API\n          // For now, we'll simulate a response after a short delay\n          setTimeout(() => {\n            // Simulate transcription completion\n            const exampleTexts = [\"I want to practice talking with someone I'm meeting for the first time.\", \"나는 저녁을 먹었어.\"];\n            const randomText = exampleTexts[Math.floor(Math.random() * exampleTexts.length)];\n            onVoiceInput(randomText);\n\n            // Clean up the URL when done\n            if (audioURL) {\n              AudioRecorder.revokeAudioURL(audioURL);\n              setAudioURL(null);\n            }\n          }, 1000);\n        }\n      } catch (error) {\n        console.error('Error stopping recording:', error);\n        setIsRecording(false);\n      }\n    } else {\n      try {\n        // Start recording\n        if (recorderRef.current) {\n          await recorderRef.current.startRecording();\n          setIsRecording(true);\n        }\n      } catch (error) {\n        console.error('Error starting recording:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container flex-grow overflow-y-auto p-4 space-y-4\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${message.type === 'ai' ? 'ai-bubble' : 'user-bubble'} flex`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), message.type === 'ai' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button ml-2 text-gray-600 hover:text-gray-900\",\n          onClick: () => handlePlayAudio(message.text),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"5 3 19 12 5 21 5 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), currentPage >= 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container p-4 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-button ${isRecording ? 'bg-red-100 animate-pulse' : 'bg-white'}`,\n        onClick: handleMicClick,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M19 10v2a7 7 0 0 1-14 0v-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"12\",\n            y1: \"19\",\n            x2: \"12\",\n            y2: \"23\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"8\",\n            y1: \"23\",\n            x2: \"16\",\n            y2: \"23\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"3eQbjiGCquFb9V8Sbz1iY55ow+s=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","AudioRecorder","jsxDEV","_jsxDEV","ChatInterface","messages","currentPage","onVoiceInput","_s","isRecording","setIsRecording","audioURL","setAudioURL","recorderRef","handlePlayAudio","text","window","utterance","SpeechSynthesisUtterance","lang","match","speechSynthesis","speak","console","log","current","revokeAudioURL","handleMicClick","audioBlob","stopRecording","url","createAudioURL","setTimeout","exampleTexts","randomText","Math","floor","random","length","error","startRecording","className","children","map","message","index","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/bagjun-won/test-3d/learning-interface/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { AudioRecorder } from '../utils/audioUtils';\n\ninterface Message {\n  type: 'ai' | 'user';\n  text: string;\n}\n\ninterface ChatInterfaceProps {\n  messages: Message[];\n  currentPage: number;\n  onVoiceInput: (text: string) => void;\n}\n\nconst ChatInterface: React.FC<ChatInterfaceProps> = ({ messages, currentPage, onVoiceInput }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState<string | null>(null);\n  const recorderRef = useRef<AudioRecorder | null>(null);\n  \n  // Function to handle text-to-speech for AI messages\n  const handlePlayAudio = (text: string) => {\n    // In a real app, this would call a text-to-speech API\n    // For now, we'll use the browser's built-in speech synthesis\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = text.match(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/) ? 'ko-KR' : 'en-US';\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.log('Text-to-speech not supported in this browser');\n    }\n  };\n  \n  // Initialize the recorder on component mount\n  useEffect(() => {\n    recorderRef.current = new AudioRecorder();\n    \n    // Clean up audio URL when component unmounts\n    return () => {\n      if (audioURL) {\n        AudioRecorder.revokeAudioURL(audioURL);\n      }\n    };\n  }, [audioURL]); // Adding audioURL to the dependency array\n\n  // Function to handle voice recording\n  const handleMicClick = async () => {\n    if (isRecording) {\n      try {\n        // Stop recording\n        setIsRecording(false);\n        \n        if (recorderRef.current) {\n          const audioBlob = await recorderRef.current.stopRecording();\n          const url = AudioRecorder.createAudioURL(audioBlob);\n          setAudioURL(url);\n          \n          // In a real application, you would send this blob to your speech-to-text API\n          // For now, we'll simulate a response after a short delay\n          setTimeout(() => {\n            // Simulate transcription completion\n            const exampleTexts = [\n              \"I want to practice talking with someone I'm meeting for the first time.\",\n              \"나는 저녁을 먹었어.\"\n            ];\n            const randomText = exampleTexts[Math.floor(Math.random() * exampleTexts.length)];\n            onVoiceInput(randomText);\n            \n            // Clean up the URL when done\n            if (audioURL) {\n              AudioRecorder.revokeAudioURL(audioURL);\n              setAudioURL(null);\n            }\n          }, 1000);\n        }\n      } catch (error) {\n        console.error('Error stopping recording:', error);\n        setIsRecording(false);\n      }\n    } else {\n      try {\n        // Start recording\n        if (recorderRef.current) {\n          await recorderRef.current.startRecording();\n          setIsRecording(true);\n        }\n      } catch (error) {\n        console.error('Error starting recording:', error);\n      }\n    }\n  };\n  \n  return (\n    <div className=\"chat-container h-full flex flex-col\">\n      <div className=\"messages-container flex-grow overflow-y-auto p-4 space-y-4\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={`chat-bubble ${message.type === 'ai' ? 'ai-bubble' : 'user-bubble'} flex`}\n          >\n            <div className=\"flex-grow\">{message.text}</div>\n            {message.type === 'ai' && (\n              <button \n                className=\"play-button ml-2 text-gray-600 hover:text-gray-900\"\n                onClick={() => handlePlayAudio(message.text)}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <polygon points=\"5 3 19 12 5 21 5 3\"></polygon>\n                </svg>\n              </button>\n            )}\n          </div>\n        ))}\n      </div>\n      \n      {currentPage >= 2 && (\n        <div className=\"controls-container p-4 flex justify-center\">\n          <button \n            className={`control-button ${isRecording ? 'bg-red-100 animate-pulse' : 'bg-white'}`}\n            onClick={handleMicClick}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path>\n              <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n              <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n              <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n            </svg>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}