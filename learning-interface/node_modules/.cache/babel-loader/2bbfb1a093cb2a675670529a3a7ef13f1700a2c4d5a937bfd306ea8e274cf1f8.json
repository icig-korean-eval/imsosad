{"ast":null,"code":"/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2017 Brett Zamir, 2012 Niklas von Hertzen\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n/**\r\n * Encode a byte buffer as a base64 string.\r\n * @param {!Uint8Array} bytes The buffer.\r\n * @return {string} A .wav file as a DataURI.\r\n */\nexport function encode(bytes) {\n  /** @type {string} */\n  let base64 = '';\n  for (let i = 0; i < bytes.length; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n  if (bytes.length % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + '=';\n  } else if (bytes.length % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + '==';\n  }\n  return base64;\n}\n\n/**\r\n * Decode a base64 string as a byte as buffer.\r\n * @param {string} base64 A .wav file as a DataURI.\r\n * @return {!Uint8Array} A .wav file as a DataURI.\r\n */\nexport function decode(base64) {\n  /** @type {!Uint8Array} */\n  let lookup = new Uint8Array(256);\n  for (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n  /** @type {number} */\n  let bufferLength = base64.length * 0.75;\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n  /** @type {!Uint8Array} */\n  let bytes = new Uint8Array(bufferLength);\n  for (let i = 0, j = 0; i < base64.length; i += 4) {\n    /** @type {number} */\n    let encoded1 = lookup[base64.charCodeAt(i)];\n    /** @type {number} */\n    let encoded2 = lookup[base64.charCodeAt(i + 1)];\n    /** @type {number} */\n    let encoded3 = lookup[base64.charCodeAt(i + 2)];\n    /** @type {number} */\n    let encoded4 = lookup[base64.charCodeAt(i + 3)];\n    bytes[j++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[j++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[j++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return bytes;\n}","map":{"version":3,"names":["chars","encode","bytes","base64","i","length","substring","decode","lookup","Uint8Array","charCodeAt","bufferLength","j","encoded1","encoded2","encoded3","encoded4"],"sources":["C:/Users/kimmi/Desktop/learning-interface/learning-interface/node_modules/wavefile/lib/parsers/base64-arraybuffer.js"],"sourcesContent":["/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2017 Brett Zamir, 2012 Niklas von Hertzen\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n/**\r\n * Encode a byte buffer as a base64 string.\r\n * @param {!Uint8Array} bytes The buffer.\r\n * @return {string} A .wav file as a DataURI.\r\n */\r\nexport function encode(bytes) {\r\n  /** @type {string} */\r\n  let base64 = '';\r\n  for (let i = 0; i < bytes.length; i += 3) {\r\n    base64 += chars[bytes[i] >> 2];\r\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\r\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\r\n    base64 += chars[bytes[i + 2] & 63];\r\n  }\r\n  if (bytes.length % 3 === 2) {\r\n    base64 = base64.substring(0, base64.length - 1) + '=';\r\n  } else if (bytes.length % 3 === 1) {\r\n    base64 = base64.substring(0, base64.length - 2) + '==';\r\n  }\r\n  return base64;\r\n}\r\n\r\n/**\r\n * Decode a base64 string as a byte as buffer.\r\n * @param {string} base64 A .wav file as a DataURI.\r\n * @return {!Uint8Array} A .wav file as a DataURI.\r\n */\r\nexport function decode(base64) {\r\n  /** @type {!Uint8Array} */\r\n  let lookup = new Uint8Array(256);\r\n  for (let i = 0; i < chars.length; i++) {\r\n    lookup[chars.charCodeAt(i)] = i;\r\n  }\r\n  /** @type {number} */\r\n  let bufferLength = base64.length * 0.75;\r\n  if (base64[base64.length - 1] === '=') {\r\n    bufferLength--;\r\n    if (base64[base64.length - 2] === '=') {\r\n      bufferLength--;\r\n    }\r\n  }\r\n  /** @type {!Uint8Array} */\r\n  let bytes = new Uint8Array(bufferLength);\r\n  for (let i = 0, j = 0; i < base64.length; i += 4) {\r\n    /** @type {number} */\r\n    let encoded1 = lookup[base64.charCodeAt(i)];\r\n    /** @type {number} */\r\n    let encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n    /** @type {number} */\r\n    let encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n    /** @type {number} */\r\n    let encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n    bytes[j++] = encoded1 << 2 | encoded2 >> 4;\r\n    bytes[j++] = (encoded2 & 15) << 4 | encoded3 >> 2;\r\n    bytes[j++] = (encoded3 & 3) << 6 | encoded4 & 63;\r\n  }\r\n  return bytes;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}