{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmi\\\\Desktop\\\\learning-interface\\\\learning-interface\\\\src\\\\components\\\\chat\\\\ChatContainer.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MessageBubble from './MessageBubble';\nimport { useLearning } from '../../context/LearningContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * 전체 채팅 컨테이너 컴포넌트\n * 모든 메시지 버블을 표시합니다\n */\nconst ChatContainer = () => {\n  _s();\n  const {\n    messages\n  } = useLearning();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageBubble, {\n      message: message\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"zthwhDb+ArbuNefPJzeR66s8WCA=\", false, function () {\n  return [useLearning];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","MessageBubble","useLearning","jsxDEV","_jsxDEV","ChatContainer","_s","messages","className","children","map","message","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kimmi/Desktop/learning-interface/learning-interface/src/components/chat/ChatContainer.tsx"],"sourcesContent":["import React from 'react';\nimport MessageBubble from './MessageBubble';\nimport { useLearning } from '../../context/LearningContext';\nimport { Message } from '../../types/index';\n\n/**\n * 전체 채팅 컨테이너 컴포넌트\n * 모든 메시지 버블을 표시합니다\n */\nconst ChatContainer: React.FC = () => {\n  const { messages } = useLearning();\n  \n  return (\n    <div className=\"chat-container\">\n      {messages.map((message: Message) => (\n        <MessageBubble key={message.id} message={message} />\n      ))}\n    </div>\n  );\n};\n\nexport default ChatContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D;AACA;AACA;AACA;AACA,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAS,CAAC,GAAGL,WAAW,CAAC,CAAC;EAElC,oBACEE,OAAA;IAAKI,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BF,QAAQ,CAACG,GAAG,CAAEC,OAAgB,iBAC7BP,OAAA,CAACH,aAAa;MAAkBU,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACV,EAAA,CAVID,aAAuB;EAAA,QACNH,WAAW;AAAA;AAAAe,EAAA,GAD5BZ,aAAuB;AAY7B,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}